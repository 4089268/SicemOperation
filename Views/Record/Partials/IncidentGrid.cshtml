@model IncidentGridModel<int>

@functions {
    string[] GetGroups(){
        return Model.Elements.GroupBy( item => item.Group).Select( g => g.Key).ToArray();
    }

    IEnumerable<IncidentGridElementModel<int>> GetElementsOfGroup(string groupName){
        return Model.Elements.Where( item => item.Group == groupName).ToList();
    }

    string IncidentClassName(int el){
        if(el > 0){
            return "";
        }else{
            return "alert alert-danger";
        }
    }
}

<div class="table-responsive">
    <table class="table table-striped table-bordered">
        <thead>
            <tr>
                <th>Incidencia</th>
                @for(int day = 0; day < Model.TotalDays; day++ ){
                    <th class="text-center">@(day + 1)</th>
                }
            </tr>
        </thead>
        <tbody>

            @foreach(var groupName in GetGroups()){
                <tr>
                    <td colspan="@(Model.TotalDays + 1)">
                        <span class="text-bold text-uppercase">@groupName</span>
                    </td>
                </tr>

                @foreach(var incidentType in GetElementsOfGroup(groupName)){
                    <tr>
                        <td>@incidentType.IncidentName</td>
                        @for(int i = 0; i < Model.TotalDays; i++ ){
                            <td class="text-center @IncidentClassName(incidentType.Data.ElementAt(i))">@incidentType.Data.ElementAt(i)</td>
                        }
                    </tr>
                }

            }

        </tbody>
    </table>
</div>