// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SicemOperation.Data;

#nullable disable

namespace SicemOperation.Migrations
{
    [DbContext(typeof(SicemOperationContext))]
    [Migration("20241025044036_initial-migration")]
    partial class initialmigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("SicemOperation.Entities.Incidencia", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("Eliminado")
                        .HasColumnType("datetime2")
                        .HasColumnName("eliminado");

                    b.Property<DateTime>("Fecha")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("fecha")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<int>("OficinaId")
                        .HasColumnType("int")
                        .HasColumnName("oficinaId");

                    b.Property<int>("TipoIncidenciaId")
                        .HasColumnType("int")
                        .HasColumnName("tipoIncidenciaId");

                    b.Property<DateTime>("UltimaActualizacion")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnName("ultimaActualizacion")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int")
                        .HasColumnName("usuarioId");

                    b.Property<int>("Valor")
                        .HasColumnType("int")
                        .HasColumnName("valor");

                    b.HasKey("Id");

                    b.HasIndex("OficinaId");

                    b.HasIndex("TipoIncidenciaId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Opr_Incidencia", "Operation");
                });

            modelBuilder.Entity("SicemOperation.Entities.Oficina", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Alias")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("alias");

                    b.Property<bool?>("Inactivo")
                        .HasColumnType("bit")
                        .HasColumnName("inactivo");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("nombre");

                    b.Property<DateTime>("UltimaActualizacion")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnName("ultimaActualizacion")
                        .HasDefaultValueSql("GETDATE()");

                    b.HasKey("Id");

                    b.ToTable("Oficinas", "System");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nombre = "Oficina de prueba",
                            UltimaActualizacion = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("SicemOperation.Entities.TipoIncidencia", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("descripcion");

                    b.Property<string>("Grupo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("grupo");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("nombre");

                    b.HasKey("Id");

                    b.ToTable("Cat_Incidencia", "Operation");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Descripcion = "En tomas domiciliarias",
                            Grupo = "Numero de Fugas",
                            Nombre = "fugaTomaDomiciliaria"
                        },
                        new
                        {
                            Id = 2,
                            Descripcion = "En lineas de Conduccion",
                            Grupo = "Numero de Fugas",
                            Nombre = "fugaLineaConduccion"
                        },
                        new
                        {
                            Id = 3,
                            Descripcion = "En redes de distribucion",
                            Grupo = "Numero de Fugas",
                            Nombre = "fugaLineaDistribucion"
                        },
                        new
                        {
                            Id = 4,
                            Descripcion = "Subestaciones electricas",
                            Grupo = "Fallas en equipos electromecanicos en agua potable",
                            Nombre = "fallaAguaPotableElectrica"
                        },
                        new
                        {
                            Id = 5,
                            Descripcion = "Centro de control de motores",
                            Grupo = "Fallas en equipos electromecanicos en agua potable",
                            Nombre = "fallaAguaPotableCentroControl"
                        },
                        new
                        {
                            Id = 6,
                            Descripcion = "Equipo de bombeo",
                            Grupo = "Fallas en equipos electromecanicos en agua potable",
                            Nombre = "fallaAguaPotableBombeo"
                        },
                        new
                        {
                            Id = 7,
                            Descripcion = "Subestaciones electricas",
                            Grupo = "Fallas en equipos electromecanicos en aguas residuales",
                            Nombre = "fallaAguaResidualElectrica"
                        },
                        new
                        {
                            Id = 8,
                            Descripcion = "Centro de control de motores",
                            Grupo = "Fallas en equipos electromecanicos en aguas residuales",
                            Nombre = "fallaAguaResidualCentroControl"
                        },
                        new
                        {
                            Id = 9,
                            Descripcion = "Equipo de bombeo",
                            Grupo = "Fallas en equipos electromecanicos en aguas residuales",
                            Nombre = "fallaAguaResidualBombeo"
                        },
                        new
                        {
                            Id = 10,
                            Descripcion = "Rebosamientos de agua residual atendidos",
                            Grupo = "Recoleccion aguas residuales",
                            Nombre = "recoleccionResidualAtendido"
                        },
                        new
                        {
                            Id = 11,
                            Descripcion = "Colectores desasolvados (mts)",
                            Grupo = "Recoleccion aguas residuales",
                            Nombre = "recoleccionResidualColector"
                        },
                        new
                        {
                            Id = 12,
                            Descripcion = "Pozos de visita desasolvados",
                            Grupo = "Recoleccion aguas residuales",
                            Nombre = "recoleccionResidualVisita"
                        },
                        new
                        {
                            Id = 13,
                            Descripcion = "Equipos en pretratamiento",
                            Grupo = "Fallas en plantas de tratamiento de aguas residuales",
                            Nombre = "fallaTratamientoEquipos"
                        },
                        new
                        {
                            Id = 14,
                            Descripcion = "Sistema de aereacion",
                            Grupo = "Fallas en plantas de tratamiento de aguas residuales",
                            Nombre = "fallaTratamientoAereacion"
                        },
                        new
                        {
                            Id = 15,
                            Descripcion = "Equipos de recirculacion",
                            Grupo = "Fallas en plantas de tratamiento de aguas residuales",
                            Nombre = "fallaTratamientoRecirculacion"
                        },
                        new
                        {
                            Id = 16,
                            Descripcion = "Sistema de sedimentacion",
                            Grupo = "Fallas en plantas de tratamiento de aguas residuales",
                            Nombre = "fallaTratamientoSedimentacion"
                        },
                        new
                        {
                            Id = 17,
                            Descripcion = "Sistema de desinfeccion",
                            Grupo = "Fallas en plantas de tratamiento de aguas residuales",
                            Nombre = "fallaTratamientoDesinfeccion"
                        });
                });

            modelBuilder.Entity("SicemOperation.Entities.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Correo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("correo");

                    b.Property<bool?>("Inactivo")
                        .HasColumnType("bit")
                        .HasColumnName("inactivo");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("nombre");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("password");

                    b.HasKey("Id");

                    b.ToTable("Usuarios", "System");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Correo = "admin@email.com",
                            Nombre = "administrador",
                            Password = "$2a$11$aYxcmSuSVeN5Jwx26us9AeLRWM8paUdZME5A4WR4uX7ung.qy3Nr6"
                        });
                });

            modelBuilder.Entity("SicemOperation.Entities.Incidencia", b =>
                {
                    b.HasOne("SicemOperation.Entities.Oficina", "Oficina")
                        .WithMany()
                        .HasForeignKey("OficinaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SicemOperation.Entities.TipoIncidencia", "TipoIncidencia")
                        .WithMany()
                        .HasForeignKey("TipoIncidenciaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SicemOperation.Entities.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Oficina");

                    b.Navigation("TipoIncidencia");

                    b.Navigation("Usuario");
                });
#pragma warning restore 612, 618
        }
    }
}
